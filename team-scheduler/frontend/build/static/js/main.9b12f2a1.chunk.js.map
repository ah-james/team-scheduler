{"version":3,"sources":["actions/titlesActions.js","actions/employeesActions.js","components/EmployeeSelect.js","components/WeekdayCard.js","containers/HomeContainer.js","components/EmployeeForm.js","components/EditEmployeeForm.js","components/EmployeeCard.js","components/Search.js","containers/EmployeesContainer.js","components/TitleCard.js","components/TitleForm.js","containers/TitlesContainer.js","components/AboutPage.js","containers/TitleShowContainer.js","components/Router.js","App.js","reportWebVitals.js","reducers/employeeReducer.js","reducers/titleReducer.js","reducers/rootReducer.js","index.js"],"names":["fetchTitles","dispatch","a","fetch","response","ok","Error","json","type","payload","deleteTitle","title","method","headers","fetchEmployees","deleteEmployee","employee","increaseAward","id","body","JSON","stringify","awards","attributes","EmployeeSelect","props","class","weekday","employees","filter","title_id","parseInt","titleId","map","filteredEmployee","name","WeekdayCard","titles","title_name","HomeContainer","useSelector","state","useDispatch","loadPage","useCallback","console","log","useEffect","initialState","image","years","formReducer","action","field","EmployeeForm","useState","errorName","formErrors","setFormErrors","useReducer","formState","dispatchState","handleTextChange","event","target","value","onSubmit","preventDefault","formIsValid","match","validateForm","for","onChange","e","EditEmployeeForm","setId","errors","setErrors","findEmployee","employeeId","find","editEmployee","resetEmployeeId","EmployeeCard","addAward","src","alt","onClick","confirmAlert","message","buttons","label","delete","alert","handleEdit","Search","placeholder","handleInputChange","EmployeesContainer","setEmployeeId","search","setSearch","filteredEmployees","length","toLowerCase","includes","employeeActions","titlesActions","handleDelete","TitleCard","to","TitleForm","setTitleName","description","setDescription","createTitle","TitlesContainer","AboutPage","TitleShowContainer","titleDetails","params","Router","exact","path","component","App","className","aria-current","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","employeeReducer","index","findIndex","slice","titleReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b12f2a1.chunk.js","sourcesContent":["// export const fetchTitles = () => {\r\n//     return (dispatch) => {\r\n//         fetch('http://localhost:3000/titles')\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: \"GET_TITLES\", payload: json['data']}))\r\n//     }\r\n// }\r\n\r\nexport const fetchTitles = () => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch('http://localhost:3000/titles')\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Something went wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: \"GET_TITLES\", payload: json['data']})\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\n// export const createTitle = title => {\r\n//     return (dispatch) => {\r\n//         fetch('http://localhost:3000/titles', {\r\n//             method: 'POST',\r\n//             body: JSON.stringify(title),\r\n//             headers: {'Content-Type': 'application/json'}\r\n//         })\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: 'ADD_TITLE', payload: json['data']}))\r\n//     }\r\n// }\r\n\r\nexport const createTitle = (title_name, description) => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch('http://localhost:3000/titles', {\r\n                method: 'POST',\r\n                body: JSON.stringify({title_name, description}),\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: 'ADD_TITLE', payload: json['data']})\r\n\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\n// export const deleteTitle = employee => {\r\n//     return (dispatch) => {\r\n//         fetch(`http://localhost:3000/titles/${employee}`, {\r\n//             method: \"DELETE\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//                 \"Accept\": \"application/json\"\r\n//             }\r\n//         })\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({ type: 'DELETE_TITLE', payload: json}))\r\n//     }\r\n// }\r\n\r\nexport const deleteTitle = title => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/titles/${title}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({ type: 'DELETE_TITLE', payload: json})\r\n\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}","// export const fetchEmployees = () => {\r\n//     return (dispatch) => {\r\n//         fetch('http://localhost:3000/employees')\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: \"GET_EMPLOYEES\", payload: json['data']}))\r\n//     }\r\n// }\r\n\r\nexport const fetchEmployees = () => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch('http://localhost:3000/employees')\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: \"GET_EMPLOYEES\", payload: json['data']})\r\n\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\n// export const addEmployee = employee => {\r\n//     return (dispatch) => {\r\n//         fetch('http://localhost:3000/employees', {\r\n//             method: 'POST',\r\n//             body: JSON.stringify(employee),\r\n//             headers: {'Content-Type': 'application/json'}\r\n//         })\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: \"ADD_EMPLOYEE\", payload: json['data']}))\r\n//     }\r\n// }\r\n\r\nexport const addEmployee = (name, image, years, awards, title_id) => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch('http://localhost:3000/employees', {\r\n                method: 'POST',\r\n                body: JSON.stringify({name, image, years, awards, title_id}),\r\n                headers: {'Content-Type': 'application/json'}\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: \"ADD_EMPLOYEE\", payload: json['data']})\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\n// export const deleteEmployee = employee => {\r\n//     return (dispatch) => {\r\n//         fetch(`http://localhost:3000/employees/${employee}`, {\r\n//             method: \"DELETE\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//                 \"Accept\": \"application/json\"\r\n//             }\r\n//         })\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: \"DELETE_EMPLOYEE\", payload: json}))\r\n//     }\r\n// }\r\n\r\nexport const deleteEmployee = employee => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/employees/${employee}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: \"DELETE_EMPLOYEE\", payload: json})\r\n            \r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\n// export const editEmployee = employee => {\r\n//     return (dispatch) => {\r\n//         fetch(`http://localhost:3000/employees/${employee.id}`, {\r\n//         method: 'PATCH',\r\n//         body: JSON.stringify(employee),\r\n//         headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\r\n//         })\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: 'EDIT_EMPLOYEE', payload: json['data']}))\r\n//     }\r\n// }\r\n\r\nexport const editEmployee = (id, name, image, years, awards, title_id) => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/employees/${id}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({id, name, image, years, awards, title_id}),\r\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: 'EDIT_EMPLOYEE', payload: json['data']})\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\n// export const increaseAward = employee => {\r\n//     return (dispatch) => {\r\n//         fetch(`http://localhost:3000/employees/${employee.id}`, {\r\n//         method: 'PATCH',\r\n//         body: JSON.stringify({awards: employee.attributes.awards + 1}),\r\n//         headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\r\n//         })\r\n//         .then(resp => resp.json())\r\n//         .then(json => dispatch({type: 'EDIT_EMPLOYEE', payload: json['data']}))\r\n//     }\r\n// }\r\n\r\nexport const increaseAward = employee => {\r\n    return async dispatch => {\r\n        try {\r\n            let response = await fetch(`http://localhost:3000/employees/${employee.id}`, {\r\n                method: 'PATCH',\r\n                body: JSON.stringify({awards: employee.attributes.awards + 1}),\r\n                headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Something Went Wrong!')\r\n            }\r\n\r\n            let json = await response.json()\r\n            dispatch({type: 'EDIT_EMPLOYEE', payload: json['data']})\r\n        } catch (error) {\r\n            throw error\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nconst EmployeeSelect = (props) => {\r\n    return(\r\n        <div>\r\n            <select class={`${props.weekday}-selector`}>\r\n                <option id={`employee-0`}></option>\r\n                {/* {props.employees.map(employee => <option id={`employee-${employee.id}`} >{employee.attributes.name}</option>)} */}\r\n                {props.employees.filter(employee => employee.attributes.title_id === parseInt(props.titleId)).map(filteredEmployee => (\r\n                    <option id={`employee-${filteredEmployee.id}`} >{filteredEmployee.attributes.name}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeSelect","import React from 'react'\r\n\r\nimport EmployeeSelect from './EmployeeSelect'\r\n\r\nconst WeekdayCard = (props) => {\r\n    return(\r\n        <div class=\"col-md-3\">\r\n            <h1>{props.weekday}</h1>\r\n            {props.titles.map(title => \r\n                <div id={`${props.weekday}-${title.attributes.title_name}-dropdown`}>\r\n                    <label>{title.attributes.title_name}<br/></label>\r\n                    <EmployeeSelect weekday={props.weekday} employees={props.employees} titleId={title.id}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeekdayCard","import React, { useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { fetchTitles } from '../actions/titlesActions'\r\nimport { fetchEmployees } from '../actions/employeesActions'\r\nimport WeekdayCard from '../components/WeekdayCard'\r\n\r\nconst HomeContainer = props => {\r\n\r\n    const employees = useSelector(state => state.employees)\r\n    const titles = useSelector(state => state.titles)\r\n    const dispatch = useDispatch()\r\n\r\n    const loadPage = useCallback(async () => {\r\n        try {\r\n            await dispatch(fetchEmployees())\r\n            await dispatch(fetchTitles())\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        loadPage()\r\n    }, [loadPage])\r\n\r\n    return(\r\n        <div class=\"row\">\r\n            <WeekdayCard weekday={'Monday'} titles={titles} employees={employees} />\r\n            <WeekdayCard weekday={'Tuesday'} titles={titles} employees={employees} />\r\n            <WeekdayCard weekday={'Wednesday'} titles={titles} employees={employees} />\r\n            <WeekdayCard weekday={'Thursday'} titles={titles} employees={employees} />\r\n            <WeekdayCard weekday={'Friday'} titles={titles} employees={employees} />\r\n            <WeekdayCard weekday={'Saturday'} titles={titles} employees={employees} />\r\n            <WeekdayCard weekday={'Sunday'} titles={titles} employees={employees} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeContainer","import React, { useState, useReducer } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { addEmployee } from '../actions/employeesActions'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    image: '',\r\n    years: 0,\r\n    awards: 0,\r\n    title_id: ''\r\n}\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"HANDLE_INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.field]: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst EmployeeForm = props => {\r\n    // const [name, setName] = useState('')\r\n    // const [image, setImage] = useState('')\r\n    // const [years, setYears] = useState(0)\r\n    // const [awards, setAwards] = useState(0)\r\n    // const [title_id, setTitleId] = useState('')\r\n    const [formErrors, setFormErrors] = useState({\r\n        errorName: '',\r\n        image: ''\r\n    })\r\n\r\n    // implement useReducer\r\n    const [formState, dispatchState] = useReducer(formReducer, initialState)\r\n\r\n    const titles = useSelector(state => state.titles)\r\n    const dispatch = useDispatch()\r\n\r\n    const validateForm = () => {\r\n        // let formErrors = {}\r\n        let formIsValid = true\r\n\r\n        if (!formState.name) {\r\n            formIsValid = false\r\n            // formErrors['name'] = '*Please enter a name'\r\n            setFormErrors({ \r\n                ...formErrors,\r\n                errorName: '*Please enter a name' \r\n            })\r\n        }\r\n\r\n        if (!formState.image) {\r\n            formIsValid = false\r\n            // formErrors['image'] = '*Please enter an image'\r\n            setFormErrors({ \r\n                ...formErrors,\r\n                image: '*Please enter an image' \r\n            })\r\n        }\r\n\r\n        if (formState.name) {\r\n            if (!formState.name.match(/[a-zA-Z]/)) {\r\n                formIsValid = false\r\n                // formErrors['name'] = '*Please only use letters'\r\n                setFormErrors({\r\n                    ...formErrors, \r\n                    errorName: '*Please only use letters' \r\n                })\r\n            }\r\n        }\r\n\r\n        // setErrors(formErrors)\r\n        return formIsValid\r\n    }\r\n\r\n    const handleTextChange = (event) => {\r\n        dispatchState({\r\n            type: \"HANDLE_INPUT\",\r\n            field: event.target.name,\r\n            payload: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        if (validateForm()) {\r\n            dispatch(addEmployee(formState.name, formState.image, formState.years, formState.awards, formState.title_id))\r\n        }\r\n        formState.name = ''\r\n        formState.image = ''\r\n        formState.years = 0\r\n        formState.awards = 0\r\n        formState.title_id = ''\r\n        setFormErrors({})\r\n    }   \r\n\r\n    return(\r\n        <div class=\"py-5 text-center container\">\r\n            <div class=\"row py-lg-5\">\r\n                <div class=\"col-lg-6 col-md-8 mx-auto\">\r\n                    <h2>Create a New Employee</h2><br />\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div class=\"mb-3\">\r\n                            <label for='name'>Name: </label>\r\n                            <input id='name' type='text' value={formState.name} onChange={e => handleTextChange(e)} name=\"name\"/>\r\n                            <div class='text-danger'>{formErrors.errorName}</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label>Image: </label>\r\n                            <input type='text' value={formState.image} onChange={e => handleTextChange(e)} name=\"image\"/>\r\n                            <div class='text-danger'>{formErrors.image}</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label>Years: </label>\r\n                            <input type='number' value={parseInt(formState.years)} onChange={e => handleTextChange(e)} name=\"years\"/>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label>Employee Awards: </label>\r\n                            <input type='number' value={parseInt(formState.awards)} onChange={e => handleTextChange(e)} name=\"awards\"/>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label class=\"form-label\">Title: </label>\r\n                            <select class=\"custom-select custom-select-lg mb-3\" type='dropdown' onChange={e => handleTextChange(e)} name=\"title_id\">\r\n                                <option>        </option>\r\n                                {titles.map((title, id) => <option value={id+1}>{title.attributes.title_name}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <input class=\"btn btn-outline-dark\" type=\"submit\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeForm","import React, { useEffect, useState, useReducer } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { editEmployee } from '../actions/employeesActions'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    image: '',\r\n    years: 0,\r\n    awards: 0,\r\n    title_id: ''\r\n}\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"HANDLE_INPUT\":\r\n            return {\r\n                ...state,\r\n                [action.field]: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst EditEmployeeForm = props => {\r\n    const [id, setId] = useState('')\r\n    // const [name, setName] = useState('')\r\n    // const [image, setImage] = useState('')\r\n    // const [years, setYears] = useState(0)\r\n    // const [awards, setAwards] = useState(0)\r\n    // const [title_id, setTitleId] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const [formState, dispatchState] = useReducer(formReducer, initialState)\r\n\r\n    const employees = useSelector(state => state.employees)\r\n    const titles = useSelector(state => state.titles)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const validateForm = () => {\r\n        let errors = {}\r\n        let formIsValid = true\r\n\r\n        if (!formState.name) {\r\n            formIsValid = false\r\n            errors['name'] = '*Please enter a name'\r\n        }\r\n\r\n        if (!formState.image) {\r\n            formIsValid = false\r\n            errors['image'] = '*Please enter an image'\r\n        }\r\n\r\n        if (formState.name) {\r\n            if (!formState.name.match(/[a-zA-Z]/)) {\r\n                formIsValid = false\r\n                errors['name'] = '*Please only use letters'\r\n            }\r\n        }\r\n\r\n        setErrors({ errors })\r\n        return formIsValid\r\n    }\r\n\r\n    const handleTextChange = (event) => {\r\n        dispatchState({\r\n            type: \"HANDLE_INPUT\",\r\n            field: event.target.name,\r\n            payload: event.target.value,\r\n        })\r\n    }\r\n\r\n    const findEmployee = () => {\r\n        const { employeeId } = props\r\n        const employee = employees.find(employee => employee.id === employeeId)\r\n        setId(employeeId)\r\n        // formState.name = employee.attributes.name\r\n        // formState.image = employee.attributes.image\r\n        // formState.years = employee.attributes.years\r\n        // formState.awards = employee.attributes.awards\r\n        // formState.title_id = employee.attributes.title_id\r\n    }\r\n\r\n    useEffect(() => findEmployee(), [findEmployee])\r\n\r\n    const update = event => {\r\n        event.preventDefault()\r\n        // console.log(id, name, image, years, awards, title_id)\r\n        if (validateForm()) {\r\n            dispatch(editEmployee(id, formState.name, formState.image, formState.years, formState.awards, formState.title_id))\r\n        }\r\n        props.resetEmployeeId()\r\n    }\r\n\r\n    return(\r\n        <div class=\"py-5 text-center container\">\r\n            <div class=\"row py-lg-5\">\r\n                <div class=\"col-lg-6 col-md-8 mx-auto\">\r\n                    <h2>Edit Your Employee</h2><br />\r\n                    <form onSubmit={update}>\r\n                        <div class=\"mb-3\">\r\n                            <label>Name: </label>\r\n                            <input type='text' value={formState.name} onChange={e => handleTextChange(e)} name=\"name\" />\r\n                            <div class='text-danger'>{errors.name}</div>\r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label>Image: </label>\r\n                            <input type='text' value={formState.image} onChange={e => handleTextChange(e)} name=\"image\" />\r\n                            <div class='text-danger'>{errors.name}</div>     \r\n                        </div>      \r\n                        <div class=\"mb-3\">\r\n                            <label>Years: </label>\r\n                            <input type='number' value={parseInt(formState.years)} onChange={e => handleTextChange(e)} name=\"years\" />                \r\n                        </div>\r\n                        <div class=\"mb-3\">\r\n                            <label>Employee Awards: </label>\r\n                            <input type='number' value={parseInt(formState.awards)} onChange={e => handleTextChange(e)} name=\"awards\"/>\r\n                        </div>  \r\n                        <div class=\"mb-3\">              \r\n                            <label>Title: </label>\r\n                            <select type='dropdown' onChange={e => handleTextChange(e)} name=\"title_id\">\r\n                                <option value='0'>        </option>\r\n                                {titles.map((title, id) => <option value={id+1}>{title.attributes.title_name}</option>)}\r\n                            </select>   \r\n                        </div>             \r\n                        <input class=\"btn btn-outline-dark\" type=\"submit\" value=\"Edit Employee\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditEmployeeForm","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport { increaseAward } from '../actions/employeesActions'\r\n\r\n\r\nconst EmployeeCard = props => {\r\n  const dispatch = useDispatch()\r\n\r\n  const addAward = async (employee) => {\r\n    await dispatch(increaseAward(employee))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure to do delete this employee?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => props.delete(props.employee.id)\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => alert('Employee has been saved')\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <div class=\"col\">\r\n      <div class=\"card shadow-sm\">\r\n        <img class=\"bd-placeholder-img card-img-top\" src={props.employee.attributes.image} alt=\"employee\" />\r\n        <h2>{props.employee.attributes.name}</h2>\r\n        <p>Experience: {props.employee.attributes.years} Years</p>\r\n        <p>Employee of the Month: {props.employee.attributes.awards}</p>\r\n        <div class=\"btn-group\">\r\n          <button class=\"btn btn-outline-dark\" name=\"delete\" onClick={() => handleDelete()}>Fire</button>\r\n          <button class=\"btn btn-outline-dark\" onClick={() => props.handleEdit(props.employee)}>Edit</button>\r\n          <button class=\"btn btn-outline-dark\" name='award' onClick={() => addAward(props.employee)}>Award</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeCard","import React from 'react';\r\n\r\nconst Search = props => {\r\n    return(\r\n        <div>\r\n            <input type='text' placeholder='Search for an Employee' onChange={props.handleInputChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n\r\n","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport * as employeeActions from '../actions/employeesActions'\r\nimport * as titlesActions from '../actions/titlesActions'\r\nimport EmployeeForm from '../components/EmployeeForm'\r\nimport EditEmployeeForm from '../components/EditEmployeeForm'\r\nimport EmployeeCard from '../components/EmployeeCard'\r\nimport Search from '../components/Search'\r\n\r\nconst EmployeesContainer = props => {\r\n    const [employeeId, setEmployeeId] = useState(false)\r\n    const [search, setSearch] = useState('')\r\n\r\n    // use redux's useSelector hook instead of mapStateToProps\r\n    const employees = useSelector(state => state.employees)\r\n    // save useDispatch hook to a variable for ease of use\r\n    const dispatch = useDispatch()\r\n\r\n    const filteredEmployees = search.length === 0 ? employees : \r\n        employees.filter(employee =>\r\n            employee.attributes.name.toLowerCase().includes(search.toLowerCase())    \r\n        )\r\n\r\n    const loadPage = useCallback(async () => {\r\n        try {\r\n            await dispatch(employeeActions.fetchEmployees())\r\n            await dispatch(titlesActions.fetchTitles())\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        loadPage()\r\n    }, [loadPage])\r\n\r\n    const handleEdit = employee => {\r\n        setEmployeeId(employee.id)\r\n    }\r\n\r\n    const resetEmployeeId = () => {\r\n        setEmployeeId(false)\r\n    }\r\n\r\n    const handleDelete = async employee => {\r\n        await dispatch(employeeActions.deleteEmployee(employee))\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {employeeId ? <EditEmployeeForm resetEmployeeId={resetEmployeeId} employeeId={employeeId} /> : <EmployeeForm />}\r\n            <div class=\"album py-5 bg-light\">\r\n                <div id='search-field'>\r\n                    <Search handleInputChange={handleInputChange} />\r\n                </div>\r\n                <div class='container'>\r\n                    <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                        {filteredEmployees.map((employee) => \r\n                            <EmployeeCard key={employee.id} employee={employee} handleEdit={handleEdit} delete={() => handleDelete(employee.id)} />)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeesContainer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst TitleCard = props => {\r\n\r\n  const submit = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure to do delete this employee?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => props.delete(props.title.id)\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => alert('Title has been saved')\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <div class=\"col-sm\">\r\n      <Link key={props.title.id} to={`/titles/${props.title.id}`}>{props.title.attributes.title_name}</Link> \r\n      <br />\r\n      <button class=\"btn btn-outline-dark\" name=\"delete\" onClick={() => submit()}>Delete</button>\r\n      {props.employees.filter(employee => employee.attributes.title_id === parseInt(props.title.id)).map(filteredEmployee => (\r\n        <li>{filteredEmployee.attributes.name} - {filteredEmployee.attributes.years} Years</li>\r\n      ))}\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TitleCard","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { createTitle } from '../actions/titlesActions'\r\n\r\nconst TitleForm = props => {\r\n    const [title_name, setTitleName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        dispatch(createTitle(title_name, description))\r\n        setTitleName('')\r\n        setDescription('')\r\n    }  \r\n\r\n    return(\r\n        <div>\r\n            <h2>Create a New Title</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Title: </label>\r\n                <input type='text' value={title_name} onChange={e => setTitleName(e.target.value)} name=\"title_name\" />\r\n                <br /><br />\r\n                <label>Description: </label>\r\n                <input type='text' value={description} onChange={e => setDescription(e.target.value)} name=\"description\" />\r\n                <br /><br />\r\n                <input type='submit' />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleForm","import React, { useCallback, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport TitleCard from '../components/TitleCard'\r\nimport TitleForm from '../components/TitleForm'\r\nimport { fetchTitles } from '../actions/titlesActions'\r\nimport { fetchEmployees } from '../actions/employeesActions'\r\nimport { deleteTitle } from '../actions/titlesActions'\r\n\r\nconst TitlesContainer = props => {\r\n\r\n    const employees = useSelector(state => state.employees)\r\n    const titles = useSelector(state => state.titles)\r\n    const dispatch = useDispatch()\r\n\r\n    const loadPage = useCallback(async () => {\r\n        try {\r\n            await dispatch(fetchTitles())\r\n            await dispatch(fetchEmployees())\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        loadPage()\r\n    }, [loadPage])\r\n\r\n    const handleDelete = async title => {\r\n        await dispatch(deleteTitle(title))\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <TitleForm />\r\n            <br />\r\n            <div class=\"row\">\r\n                {titles.map(title => <TitleCard title={title} employees={employees} delete={() => handleDelete(title.id)} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitlesContainer","import React from 'react'\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n        <div>\r\n            <h1>What is Team Scheduler?</h1>\r\n            <br />\r\n            <p>Need some help managing your employees and what shifts they're filling? Use Team Scheduler to maintain a database of your employees, their job titles, and what days they've been scheduled to work.</p>\r\n            <p>Begin by using the \"Titles\" tab to create a new title for your staff along with a description of the title to create job options for your employees.</p>\r\n            <p>After your titles have been created, head to the \"Employees\" tab to create your staff, using their name along with how long they've worked for you, along with an image (if you wish) and tie them to one of the job titles that you just created.</p>\r\n            <p>Finally, head to the home page to view a chart of days of the week and dropdown menus for each title, input your desired employee into each position!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutPage","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport EmployeeCard from '../components/EmployeeCard'\r\n\r\nconst TitleShowContainer = props => {\r\n    const employees = useSelector(state => state.employees)\r\n    const titles = useSelector(state => state.titles)\r\n\r\n    let titleDetails = titles.filter(title => title.id === props.match.params.id)[0]\r\n\r\n    return(\r\n        <div>\r\n            <h2>{titleDetails.attributes.title_name} Employees</h2>\r\n            <h3>{titleDetails.attributes.description}</h3>\r\n            <div class=\"album py-5 bg-light\">\r\n                <div class='container'>\r\n                    <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                        {employees.filter(employee => employee.attributes.title_id === parseInt(props.match.params.id)).map(filteredEmployee => (\r\n                            <EmployeeCard employee={filteredEmployee} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleShowContainer","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport HomeContainer from '../containers/HomeContainer'\r\nimport EmployeesContainer from '../containers/EmployeesContainer'\r\nimport TitlesContainer from '../containers/TitlesContainer'\r\nimport AboutPage from './AboutPage'\r\nimport TitleShowContainer from '../containers/TitleShowContainer'\r\n\r\nexport const Router = () => {\r\n    return(\r\n        <Switch>\r\n            <Route exact path='/' component={EmployeesContainer} />\r\n            <Route path='/schedule' component={HomeContainer} />\r\n            <Route exact path='/titles' component={TitlesContainer} />\r\n            <Route path='/about' component={AboutPage} />\r\n            <Route path='/titles/:id' component={TitleShowContainer} />\r\n        </Switch>\r\n    )\r\n}","import './App.css';\nimport React from 'react';\nimport { Router } from './components/Router'\nimport { Link } from 'react-router-dom'\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav class=\"navbar navbar-expand-lg navbar-light fixed-top bg-light\">\n          <div class=\"container-fluid\">\n            <a class=\"navbar-brand\">Team Scheduler</a>\n          </div>\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li class=\"nav-item\">\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\"><Link to=\"/\">Home</Link></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\"><Link to=\"/titles\">Titles</Link></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\"><Link to='/schedule'>Schedule</Link></a>\n              </li>\n              <li class=\"nav-item\">\n                <a class=\"nav-link active\" aria-current=\"page\" href=\"#\"><Link to='/about'>About</Link></a>\n              </li>\n            </ul>\n          </div>         \n        </nav>\n        <Router />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const employeeReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_EMPLOYEES':\r\n            return action.payload\r\n        case 'ADD_EMPLOYEE':\r\n            return [...state, action.payload]\r\n        case 'DELETE_EMPLOYEE':\r\n            return [...state.filter(employee => employee.id !== action.payload.id)]\r\n        case 'EDIT_EMPLOYEE':\r\n            const index = state.findIndex(employee => action.payload.id === employee.id)\r\n            return [...state.slice(0, index), action.payload, ...state.slice(index + 1)]\r\n            // return [...state.filter(employee => employee.id !== action.payload.id), action.payload]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default employeeReducer","const titleReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'GET_TITLES':\r\n            return action.payload\r\n        case 'ADD_TITLE':\r\n            return [...state, action.payload]\r\n        case 'DELETE_TITLE':\r\n            return [...state.filter(title => title.id !== action.payload.id)]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default titleReducer","import { combineReducers } from 'redux'\r\nimport employeeReducer from './employeeReducer'\r\nimport titleReducer from './titleReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    employees: employeeReducer,\r\n    titles: titleReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {rootReducer} from './reducers/rootReducer'\nimport {BrowserRouter} from 'react-router-dom'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App /> \n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}